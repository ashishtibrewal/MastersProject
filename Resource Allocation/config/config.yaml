########################################
# Resource unit dimensions to prevent going out of bounds/limit
########################################
nRacks: 8     # Total number of racks
nBlades: 16    # Total number of blades (in each rack)
nSlots: 8     # Total number of slots (in each blade) IMPORTANT NOTE: Always keep an even number of slots
nUnits: 20     # Total number of units (in each slot)
nTOR: 2       # Number of TOR switches per rack
nTOB: 2       # Number of TOB switches per blade

# TODO Change unit size to more realistic figures
unitSize:
  CPU: 1      # >1 signifies multi-core (A simplistic approach)
  MEM: 4      # Each DIMM is 4 GB in size/capacity
  STO: 32    # Each HDD is 128 GB in size /capacity

# TODO change these to more realistic values (such as 1U, 2U .. rack unit sizes)
distances:
  TOR_IntraRack: 5    # Distance between TORs within the same rack
  TOR_InterRack: 30   # Distance between TORs between different racks
  TOR_TOB: 15         # Distance between TORs and TOBs within the same rack
  TOB_IntraBlade: 2   # Distance between TOBs within the same blade (within the same rack)
  TOB_InterBlade: 5   # Distance between TOBs between different blades (within the same rack)
  TOB_slot: 10        # Distance between TOBs and and slots within the same blade (within the same rack)
  slot: 2             # Distance between slots within the same blad (within the same rack)
  
########################################
# Specify the network topology and switch delays for each 
# hierarchial level (i.e. for rack-level, blade-level and slot-level
# topologies and switches)
# Note that units in each slot are fully connected
########################################

# Topologies at different levels
topology:
  rack: 'Fully-connected'
  rack_blade: 'Star'
  blade: 'Disconnected'
  blade_slot: 'Star'
  slot: 'Disconnected'

# Switch delays at different levels (in nanoseconds) - Used in the latency map
switchDelay:
  TOD: 300          # Main (Top of data center) switch delay - Currently not used
  TOR: 200          # Top of rack switch delay
  TOB: 100          # Top of blade switch delay

# Number of channels between two nodes (i.e. a node can be a rack/blade/slot)
channels:
  TOR_TOR: 32        # Number of channels between TORs
  TOR_TOB: 32        # Number of channels between TOR & TOB
  TOB_TOB: 16        # Number of channels between TOBs
  TOB_SLOT: 16       # Number of channels between TOB & SLOT
  SLOT_SLOT: 1      # Number of channels between SLOTs

# Contraints/bounds in the data center (Minimum channel latency in nanoseconds & maximum channel bandwidth in Gb/s)
# Maximum bandwidth available on a link connecting any two "nodes" in the network (i.e 400 Gb/s)
# Minimum latency between two connected (adjacent) nodes is 5 ns (Assuming they are 1 meter apart)
# Note that the latency is 5 ns/m - Higher the distance, higher the latency
bounds:
  minChannelLatency: 5
  maxChannelBandwidth: 400 

########################################
# Specify blade configuration on each rack
# Homogeneous
#   CPUs only = 1
#   MEMs only = 2
#   STOs only = 3
# Heterogeneous
#   CPUs, MEMs = 4 (50-50 of each CPU slots and MEM slots on a blade)
# Declaring it this way creates a 1x1 struct called 'racksConfig' that 
# 'nRacks' number of fields (i.e. each field is a rack configuration). Each
# of these fields are a cell of size 1xp, where p is 'nBlades'.
########################################

# Configuration of each rack
racksConfig:
  rack1: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]    # Homogenous CPU rack (With homogenous CPU blades)
  rack2: [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]    # Homogenous MEM rack (With homogenous MEM blades)
  rack3: [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]    # Homogenous STO rack (With homogenous STO blades)
  rack4: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]    # Homogenous CPU rack (With homogenous CPU blades)
  rack5: [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]    # Homogenous MEM rack (With homogenous MEM blades)
  rack6: [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]    # Homogenous STO rack (With homogenous STO blades)
  rack7: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]    # Homogenous CPU rack (With homogenous CPU blades)
  rack8: [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]    # Homogenous MEM rack (With homogenous MEM blades)
  rack9: [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]    # Homogenous STO rack (With homogenous STO blades)
  rack10: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]    # Homogenous CPU rack (With homogenous CPU blades)
  rack11: [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]    # Homogenous MEM rack (With homogenous MEM blades)
  rack12: [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]    # Homogenous STO rack (With homogenous STO blades)
  rack13: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]    # Homogenous CPU rack (With homogenous CPU blades)
  rack14: [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]    # Homogenous MEM rack (With homogenous MEM blades)
  rack15: [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]    # Homogenous STO rack (With homogenous STO blades)
  rack16: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]    # Homogenous CPU rack (With homogenous CPU blades)
  rack17: [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]    # Homogenous MEM rack (With homogenous MEM blades)
  rack18: [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]    # Homogenous STO rack (With homogenous STO blades)
  rack19: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]    # Homogenous CPU rack (With homogenous CPU blades)
  rack20: [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]    # Homogenous MEM rack (With homogenous MEM blades)
  rack21: [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]    # Homogenous STO rack (With homogenous STO blades)
  rack22: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]    # Homogenous CPU rack (With homogenous CPU blades)
  rack23: [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]    # Homogenous MEM rack (With homogenous MEM blades)
  rack24: [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]    # Homogenous STO rack (With homogenous STO blades)
  rack25: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]    # Homogenous CPU rack (With homogenous CPU blades)
  rack26: [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]    # Homogenous MEM rack (With homogenous MEM blades)
  rack27: [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]    # Homogenous STO rack (With homogenous STO blades)
  rack28: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]    # Homogenous CPU rack (With homogenous CPU blades)
  rack29: [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]    # Homogenous MEM rack (With homogenous MEM blades)
  rack30: [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]    # Homogenous STO rack (With homogenous STO blades)
  rack31: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]    # Homogenous CPU rack (With homogenous CPU blades)
  rack32: [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]    # Homogenous MEM rack (With homogenous MEM blades)

#  rack4: [1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2]    # Heterogeneous rack (With homogenous CPU & MEM blades) - Change ratio between the two types and evaluate the change in performance (Currently 50-50)
#  rack5: [1,1,2,2,2,2,1,1,2,2,2,2,1,1,2,2,2,2,1,1,2,2,2,2,1,1,2,2,2,2,1,1]    # Heterogeneous rack (With homogenous CPU & MEM blades) - Change ratio between the two types and evaluate the change in performance (Currently 37.5-62.5)  
  
#  rack6: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]    # Homogenous CPU rack (With homogenous CPU blades)
#  rack7: [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]    # Homogenous MEM rack (With homogenous MEM blades)

#  rack8: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]    # Homogenous CPU rack (With homogenous CPU blades)
#  rack9: [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]    # Homogenous MEM rack (With homogenous MEM blades)
#  rack10: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]    # Homogenous CPU rack (With homogenous CPU blades)
#  rack11: [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]    # Homogenous MEM rack (With homogenous MEM blades)
#  rack12: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]    # Homogenous CPU rack (With homogenous CPU blades)
#  rack13: [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]    # Homogenous MEM rack (With homogenous MEM blades)

#  rack6: [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]    # Heterogeneous rack (With heterogeneous CPU & MEM blades) - Change ratio between the two types and evaluate the change in performance (Currently 50-50)
#  rack7: [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]    # Homogenous STO rack (With homogenous STO blades)
#  rack7: [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]    # Heterogeneous rack (With heterogeneous CPU & MEM blades) - Change ratio between the two types and evaluate the change in performance (Currently 50-50)
#  rack8: [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]    # Heterogeneous rack (With heterogeneous CPU & MEM blades) - Change ratio between the two types and evaluate the change in performance (Currently 50-50)
#  rack9: [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]    # Heterogeneous rack (With heterogeneous CPU & MEM blades) - Change ratio between the two types and evaluate the change in performance (Currently 50-50)
#  rack10: [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]    # Heterogeneous rack (With heterogeneous CPU & MEM blades) - Change ratio between the two types and evaluate the change in performance (Currently 50-50)
#  rack11: [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]    # Heterogeneous rack (With heterogeneous CPU & MEM blades) - Change ratio between the two types and evaluate the change in performance (Currently 50-50)
#  rack12: [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]    # Heterogeneous rack (With heterogeneous CPU & MEM blades) - Change ratio between the two types and evaluate the change in performance (Currently 50-50)
#  rack13: [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]    # Heterogeneous rack (With heterogeneous CPU & MEM blades) - Change ratio between the two types and evaluate the change in performance (Currently 50-50)
#  rack14: [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]    # Heterogeneous rack (With heterogeneous CPU & MEM blades) - Change ratio between the two types and evaluate the change in performance (Currently 50-50)
#  rack15: [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]    # Heterogeneous rack (With heterogeneous CPU & MEM blades) - Change ratio between the two types and evaluate the change in performance (Currently 50-50)
#  rack16: [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]    # Heterogeneous rack (With heterogeneous CPU & MEM blades) - Change ratio between the two types and evaluate the change in performance (Currently 50-50)  

# Types of configurations/setups possible
setupTypes:
  homogenCPU: 1
  homogenMEM: 2
  homogenSTO: 3
  heterogenCPU_MEM: 4

# Percentage of CPU slots in a heterogeneous blade, therefore, percentage of MEM slots is (100 - percentage of CPU)
heterogenSplit:
  heterogenCPU_MEM: 50    # Change this to the number of slots rather than a percentage to avoid floating point results during calculations - WOULD ALSO NEED TO MAKE THE NECESSARY CHANGES IN THE simStart.m script/file